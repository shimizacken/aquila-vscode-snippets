{
  "Prop-less functional component": {
    "prefix": ["fc", "react prop-less functional component"],
    "body": [
      "import React from 'react';\n",
      "export const $TM_FILENAME_BASE: React.FC = () => {",
      "\treturn <div>$0</div>;",
      "};",
      ""
    ],
    "description": "TypeScript React arrow function component without properties"
  },
  "Functional component with properties": {
    "prefix": ["fcp", "react functional component with properties"],
    "body": [
      "import React from 'react';\n",
      "export const $TM_FILENAME_BASE: React.FC<{${1:type}}}> = ({${2:props}}) => {",
      "\treturn <div>$0</div>;",
      "};",
      ""
    ],
    "description": "TypeScript React arrow function component with properties"
  },
  "Functional component with type": {
    "prefix": ["fct", "react functional component with type"],
    "body": [
      "import React from 'react';\n",
      "export type ${0:$TM_FILENAME_BASE}Props = {",
      "}\n",
      "export const $TM_FILENAME_BASE: React.FC<${0:$TM_FILENAME_BASE}Props> = ({${1:props}}) => {",
      "\treturn <div>$0</div>;",
      "};",
      ""
    ],
    "description": "TypeScript React arrow function component with type"
  },
  "Memoized prop-less functional component": {
    "prefix": ["fcm", "react memoized prop-less functional component"],
    "body": [
      "import React from 'react';\n",
      "const $TM_FILENAME_BASE: React.FC = () => {",
      "\treturn <div>$0</div>;",
      "};",
      "",
      "const memoized = React.memo($TM_FILENAME_BASE);",
      "",
      "export {memoized as $TM_FILENAME_BASE};"
    ],
    "description": "Memoized TypeScript React arrow function component without properties"
  },
  "Memoized functional component with properties": {
    "prefix": ["fcmp", "react memoized functional component with properties"],
    "body": [
      "import React from 'react';\n",
      "const $TM_FILENAME_BASE: React.FC<{${1:type}}> = ({${2:props}}) => {",
      "\treturn <div>$0</div>;",
      "};",
      "",
      "const memoized = React.memo($TM_FILENAME_BASE);",
      "",
      "export {memoized as $TM_FILENAME_BASE};",
      ""
    ],
    "description": "Memoized TypeScript React arrow function component with properties"
  },
  "Memoized functional component with type": {
    "prefix": ["fcmt", "react memoized functional component with type"],
    "body": [
      "import React from 'react';\n",
      "export type ${0:$TM_FILENAME_BASE}Props = {",
      "}\n",
      "const $TM_FILENAME_BASE: React.FC<${0:$TM_FILENAME_BASE}Props> = ({${1:props}}) => {",
      "\treturn <div>$0</div>;",
      "};",
      "",
      "const memoized = React.memo($TM_FILENAME_BASE);",
      "",
      "export {memoized as $TM_FILENAME_BASE};",
      ""
    ],
    "description": "Memoized TypeScript React arrow function component with type"
  }
}
